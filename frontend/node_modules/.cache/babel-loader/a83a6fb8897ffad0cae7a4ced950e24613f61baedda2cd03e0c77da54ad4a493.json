{"ast":null,"code":"// Frontend API Integration for React\n// Kết nối với Laravel Backend\n\n// ========================================\n// CONFIGURATION\n// ========================================\nconst API_BASE_URL = 'http://localhost:8000/api';\n\n// ========================================\n// UTILITY FUNCTIONS\n// ========================================\n\n// Hàm tạo headers cho API calls\nconst getHeaders = (includeAuth = false) => {\n  const headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  if (includeAuth) {\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n  }\n  return headers;\n};\n\n// Hàm xử lý response\nconst handleResponse = async response => {\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || 'Có lỗi xảy ra');\n  }\n  return data;\n};\n\n// ========================================\n// AUTHENTICATION APIs\n// ========================================\n\n// Đăng ký tài khoản\nexport const register = async userData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/register`, {\n      method: 'POST',\n      headers: getHeaders(),\n      credentials: 'include',\n      body: JSON.stringify(userData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    console.error('Register error:', error);\n    throw error;\n  }\n};\n\n// Đăng nhập\nexport const login = async (email, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/login`, {\n      method: 'POST',\n      headers: getHeaders(),\n      credentials: 'include',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await handleResponse(response);\n\n    // Lưu token nếu có\n    if (data.token) {\n      localStorage.setItem('auth_token', data.token);\n    }\n    return data;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\n\n// Đăng xuất\nexport const logout = () => {\n  localStorage.removeItem('auth_token');\n};\n\n// ========================================\n// PRODUCT APIs\n// ========================================\n\n// Lấy danh sách sản phẩm\nexport const getProducts = async (params = {}) => {\n  try {\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `${API_BASE_URL}/products?${queryString}` : `${API_BASE_URL}/products`;\n    const response = await fetch(url, {\n      headers: getHeaders(),\n      credentials: 'include'\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    console.error('Get products error:', error);\n    throw error;\n  }\n};\n\n// Chi tiết sản phẩm\nexport const getProductDetail = async id => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/products/detail/${id}`, {\n      headers: getHeaders(),\n      credentials: 'include'\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    console.error('Get product detail error:', error);\n    throw error;\n  }\n};\n\n// ========================================\n// CART APIs\n// ========================================\n\n// Xem giỏ hàng\nexport const getCart = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/carts`, {\n      headers: getHeaders(true),\n      // Cần authentication\n      credentials: 'include'\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    console.error('Get cart error:', error);\n    throw error;\n  }\n};\n\n// Thêm vào giỏ hàng\nexport const addToCart = async (productId, quantity = 1) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/carts`, {\n      method: 'POST',\n      headers: getHeaders(true),\n      credentials: 'include',\n      body: JSON.stringify({\n        product_id: productId,\n        quantity: quantity\n      })\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    console.error('Add to cart error:', error);\n    throw error;\n  }\n};\n\n// Xóa khỏi giỏ hàng\nexport const removeFromCart = async cartId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/carts/${cartId}`, {\n      method: 'DELETE',\n      headers: getHeaders(true),\n      credentials: 'include'\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    console.error('Remove from cart error:', error);\n    throw error;\n  }\n};\n\n// ========================================\n// CATEGORY APIs\n// ========================================\n\n// Lấy danh sách danh mục\nexport const getCategories = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/categories`, {\n      headers: getHeaders(),\n      credentials: 'include'\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    console.error('Get categories error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getHeaders","includeAuth","headers","token","localStorage","getItem","handleResponse","response","data","json","ok","Error","message","register","userData","fetch","method","credentials","body","JSON","stringify","error","console","login","email","password","setItem","logout","removeItem","getProducts","params","queryString","URLSearchParams","toString","url","getProductDetail","id","getCart","addToCart","productId","quantity","product_id","removeFromCart","cartId","getCategories"],"sources":["C:/xampp/htdocs/duan/frontend/src/api.js"],"sourcesContent":["// Frontend API Integration for React\r\n// Kết nối với Laravel Backend\r\n\r\n// ========================================\r\n// CONFIGURATION\r\n// ========================================\r\nconst API_BASE_URL = 'http://localhost:8000/api';\r\n\r\n// ========================================\r\n// UTILITY FUNCTIONS\r\n// ========================================\r\n\r\n// Hàm tạo headers cho API calls\r\nconst getHeaders = (includeAuth = false) => {\r\n    const headers = {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    };\r\n    \r\n    if (includeAuth) {\r\n        const token = localStorage.getItem('auth_token');\r\n        if (token) {\r\n            headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n    }\r\n    \r\n    return headers;\r\n};\r\n\r\n// Hàm xử lý response\r\nconst handleResponse = async (response) => {\r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n        throw new Error(data.message || 'Có lỗi xảy ra');\r\n    }\r\n    \r\n    return data;\r\n};\r\n\r\n// ========================================\r\n// AUTHENTICATION APIs\r\n// ========================================\r\n\r\n// Đăng ký tài khoản\r\nexport const register = async (userData) => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/register`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            credentials: 'include',\r\n            body: JSON.stringify(userData)\r\n        });\r\n        \r\n        return await handleResponse(response);\r\n    } catch (error) {\r\n        console.error('Register error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Đăng nhập\r\nexport const login = async (email, password) => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/login`, {\r\n            method: 'POST',\r\n            headers: getHeaders(),\r\n            credentials: 'include',\r\n            body: JSON.stringify({ email, password })\r\n        });\r\n        \r\n        const data = await handleResponse(response);\r\n        \r\n        // Lưu token nếu có\r\n        if (data.token) {\r\n            localStorage.setItem('auth_token', data.token);\r\n        }\r\n        \r\n        return data;\r\n    } catch (error) {\r\n        console.error('Login error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Đăng xuất\r\nexport const logout = () => {\r\n    localStorage.removeItem('auth_token');\r\n};\r\n\r\n// ========================================\r\n// PRODUCT APIs\r\n// ========================================\r\n\r\n// Lấy danh sách sản phẩm\r\nexport const getProducts = async (params = {}) => {\r\n    try {\r\n        const queryString = new URLSearchParams(params).toString();\r\n        const url = queryString ? `${API_BASE_URL}/products?${queryString}` : `${API_BASE_URL}/products`;\r\n        \r\n        const response = await fetch(url, {\r\n            headers: getHeaders(),\r\n            credentials: 'include'\r\n        });\r\n        \r\n        return await handleResponse(response);\r\n    } catch (error) {\r\n        console.error('Get products error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Chi tiết sản phẩm\r\nexport const getProductDetail = async (id) => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/products/detail/${id}`, {\r\n            headers: getHeaders(),\r\n            credentials: 'include'\r\n        });\r\n        \r\n        return await handleResponse(response);\r\n    } catch (error) {\r\n        console.error('Get product detail error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// ========================================\r\n// CART APIs\r\n// ========================================\r\n\r\n// Xem giỏ hàng\r\nexport const getCart = async () => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/carts`, {\r\n            headers: getHeaders(true), // Cần authentication\r\n            credentials: 'include'\r\n        });\r\n        \r\n        return await handleResponse(response);\r\n    } catch (error) {\r\n        console.error('Get cart error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Thêm vào giỏ hàng\r\nexport const addToCart = async (productId, quantity = 1) => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/carts`, {\r\n            method: 'POST',\r\n            headers: getHeaders(true),\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                product_id: productId,\r\n                quantity: quantity\r\n            })\r\n        });\r\n        \r\n        return await handleResponse(response);\r\n    } catch (error) {\r\n        console.error('Add to cart error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Xóa khỏi giỏ hàng\r\nexport const removeFromCart = async (cartId) => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/carts/${cartId}`, {\r\n            method: 'DELETE',\r\n            headers: getHeaders(true),\r\n            credentials: 'include'\r\n        });\r\n        \r\n        return await handleResponse(response);\r\n    } catch (error) {\r\n        console.error('Remove from cart error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// ========================================\r\n// CATEGORY APIs\r\n// ========================================\r\n\r\n// Lấy danh sách danh mục\r\nexport const getCategories = async () => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/categories`, {\r\n            headers: getHeaders(),\r\n            credentials: 'include'\r\n        });\r\n        \r\n        return await handleResponse(response);\r\n    } catch (error) {\r\n        console.error('Get categories error:', error);\r\n        throw error;\r\n    }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}